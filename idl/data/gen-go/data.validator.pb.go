// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: data.proto

package data

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SObject) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *CreateSObjectRequest) Validate() error {
	for _, item := range this.Objects {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Objects", err)
			}
		}
	}
	return nil
}
func (this *CreateSObjectResponse) Validate() error {
	for _, item := range this.Results {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Results", err)
			}
		}
	}
	return nil
}
func (this *UpdateSObjectRequest) Validate() error {
	for _, item := range this.Objects {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Objects", err)
			}
		}
	}
	return nil
}
func (this *UpdateSObjectResponse) Validate() error {
	for _, item := range this.Results {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Results", err)
			}
		}
	}
	return nil
}
func (this *UpsertSObjectRequest) Validate() error {
	for _, item := range this.Objects {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Objects", err)
			}
		}
	}
	return nil
}
func (this *UpsertSObjectResponse) Validate() error {
	for _, item := range this.Results {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Results", err)
			}
		}
	}
	return nil
}
func (this *UpsertSObjectResult) Validate() error {
	for _, item := range this.Errors {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Errors", err)
			}
		}
	}
	return nil
}
func (this *RetrieveSObjectRequest) Validate() error {
	return nil
}
func (this *RetrieveSObjectResponse) Validate() error {
	for _, item := range this.Results {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Results", err)
			}
		}
	}
	return nil
}
func (this *DeleteSObjectRequest) Validate() error {
	return nil
}
func (this *DeleteSObjectResponse) Validate() error {
	for _, item := range this.Results {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Results", err)
			}
		}
	}
	return nil
}
func (this *DeleteResult) Validate() error {
	return nil
}
func (this *SaveResult) Validate() error {
	return nil
}
func (this *Error) Validate() error {
	return nil
}
