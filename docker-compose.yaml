version: "3.5"
services:
  jaeger:
    image: jaegertracing/all-in-one:1.18
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    networks:
      biz:
        aliases:
          - jaeger
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
  consul:
    image: consul:latest
    command: agent -dev -client 0.0.0.0 -node-id=9867dd2a-fe0f-4b46-82b5-4fdcabef1f3d
    ports:
      - 8500:8500
    networks:
      biz:
        aliases:
          - consul
  mysql:
    image: mariadb:latest
    volumes:
      - ~/opt/mysql:/var/lib/mysql
    ports:
      - 3306:3306
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --explicit_defaults_for_timestamp=true
    environment:
      TZ: Asia/Shanghai
      MYSQL_DATABASE: objforce_data
      MYSQL_ROOT_PASSWORD: root
    networks:
      biz:
        aliases:
          - mysql
  hbase:
    image: harisekhon/hbase:1.3
    ports:
      - 2181:2181
      - 8080:8080
      - 8085:8085
      - 9090:9090
      - 9095:9095
      - 16000:16000
      - 16010:16010
      - 16020:16020
      - 16201:16201
      - 16301:16301
    volumes:
      - ~/opt/hbase-data:/hbase-data
    networks:
      biz:
        aliases:
          - hbase
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.8
    volumes:
      - ~/opt/elastic:/usr/share/elasticsearch/data/
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - TZ=Asia/Shanghai
      - cluster.name=docker-cluster
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - "discovery.zen.ping.unicast.hosts=elastic"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      biz:
        aliases:
          - elastic
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    environment:
      TZ: Asia/Shanghai
    networks:
      biz:
        aliases:
          - redis
  rmqnamesrv:
    image: rocketmqinc/rocketmq:4.4.0
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ~/opt/rocketmq/logs:/home/rocketmq/logs
      - ~/opt/rocketmq/store:/home/rocketmq/store
      # - /etc/localtime:/etc/localtime:ro # 修改容器内的时区和宿主机一样
    command: sh mqnamesrv
    networks:
      biz:
        aliases:
          - rmqnamesrv
  rmqbroker1:
    image: rocketmqinc/rocketmq:4.4.0
    container_name: rmqbroker1
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    volumes:
      - ~/opt/rocketmq/logs:/home/rocketmq/logs
      - ~/opt/rocketmq/store:/home/rocketmq/store
      - ${PWD}/config/rocketmq/broker.conf:/opt/rocketmq-4.4.0/conf/broker.conf
      # - /etc/localtime:/etc/localtime:ro # 修改容器内的时区和宿主机一样
    command: sh mqbroker -n rmqnamesrv:9876 -c ../conf/broker.conf
    depends_on:
      - rmqnamesrv
    environment:
      - TZ=Asia/Shanghai
      - JAVA_HOME=/usr/lib/jvm/jre
    networks:
      biz:
        aliases:
          - rmqbroker1
  rmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rocketmq-console-ng
    ports:
      - 8087:8080
    depends_on:
      - rmqnamesrv
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS= -Dlogging.level.root=info -Drocketmq.namesrv.addr=rmqnamesrv:9876
      - Dcom.rocketmq.sendMessageWithVIPChannel=false
    networks:
      biz:
        aliases:
          - rmqconsole

  meta-api:
    build:
      context: .
      dockerfile: ./api/meta/Dockerfile
    depends_on:
      - consul
      - redis
      - jaeger
      - xapis.micro.api
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.api.meta --apollo_namespace application --apollo_address http://apollo-fat.dev.lucfish.com:8080 --apollo_app_id meta-api --apollo_cluster=dev
    networks:
      biz:
        aliases:
          - meta-api

  meta-srv:
    build:
      context: .
      dockerfile: ./server/meta-srv/Dockerfile
    depends_on:
      - consul
      - mysql
      - redis
      - hbase
      - jaeger
      - rmqnamesrv
      - xapis.micro.api
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.srv.meta --apollo_namespace application --apollo_address http://apollo-fat.dev.lucfish.com:8080 --apollo_app_id meta-srv --apollo_cluster=fat
    networks:
      biz:
        aliases:
          - meta-srv

  data-api:
    build:
      context: .
      dockerfile: ./api/data/Dockerfile
    depends_on:
      - consul
      - redis
      - jaeger
      - xapis.micro.api
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.api.data --apollo_namespace application --apollo_address http://apollo-dev.dev.lucfish.com:8080 --apollo_app_id data-api --apollo_cluster=dev
    networks:
      biz:
        aliases:
          - data-api
  data-srv:
    build:
      context: .
      dockerfile: ./service/data/Dockerfile
    depends_on:
      - consul
      - mysql
      - redis
      - hbase
      - jaeger
      - rmqnamesrv
      - xapis.micro.api
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.srv.data --apollo_namespace application --apollo_address http://apollo-dev.dev.lucfish.com:8080 --apollo_app_id data-srv --apollo_cluster=dev
    networks:
      biz:
        aliases:
          - data-srv

  index-api:
    build:
      context: .
      dockerfile: ./api/index/Dockerfile
    depends_on:
      - consul
      - redis
      - jaeger
      - xapis.micro.api
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.api.index --apollo_namespace application --apollo_address http://apollo-fat.dev.lucfish.com:8080 --apollo_app_id index-api --apollo_cluster=fat
    networks:
      biz:
        aliases:
          - index-api
  index-srv:
    build:
      context: .
      dockerfile: ./server/index/Dockerfile
    depends_on:
      - consul
      - mysql
      - redis
      - elastic
      - jaeger
      - rmqnamesrv
      - xapis.micro.api
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.srv.index --apollo_namespace application --apollo_address http://apollo-fat.dev.lucfish.com:8080 --apollo_app_id index-srv --apollo_cluster=fat
    networks:
      biz:
        aliases:
          - index-srv

  xapis.micro.api:
    image: ccr.ccs.tencentyun.com/lf_base/micro:2.9.1
    depends_on:
      - consul
    environment:
      - TZ=Asia/Shanghai
      - MICRO_REGISTRY=consul
      - MICRO_REGISTRY_ADDRESS=consul:8500
      - JAEGER_ADDR=jaeger:6831
    command: --server_name com.xapis.micro.api --auth_namespace com.xapis api --namespace com.xapis --address 0.0.0.0:8080 --handler http
    ports:
      - 10250:8080
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    networks:
      biz:
        aliases:
          - xapis.micro.api
networks:
  biz:
    name: biz
    driver: bridge
