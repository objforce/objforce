// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/index/index.proto

package index // import "github.com/objforce/objforce/proto/index"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import anypb "google.golang.org/protobuf/types/known/anypb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Document struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjId                string                `protobuf:"bytes,2,opt,name=objId,proto3" json:"objId,omitempty"`
	Fields               map[string]*anypb.Any `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_index_57962fb157365aa2, []int{0}
}
func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (dst *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(dst, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetObjId() string {
	if m != nil {
		return m.ObjId
	}
	return ""
}

func (m *Document) GetFields() map[string]*anypb.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type FindDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjId                string   `protobuf:"bytes,2,opt,name=objId,proto3" json:"objId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindDocumentRequest) Reset()         { *m = FindDocumentRequest{} }
func (m *FindDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*FindDocumentRequest) ProtoMessage()    {}
func (*FindDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_index_57962fb157365aa2, []int{1}
}
func (m *FindDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindDocumentRequest.Unmarshal(m, b)
}
func (m *FindDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *FindDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindDocumentRequest.Merge(dst, src)
}
func (m *FindDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_FindDocumentRequest.Size(m)
}
func (m *FindDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindDocumentRequest proto.InternalMessageInfo

func (m *FindDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FindDocumentRequest) GetObjId() string {
	if m != nil {
		return m.ObjId
	}
	return ""
}

type DeleteDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjId                string   `protobuf:"bytes,2,opt,name=objId,proto3" json:"objId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_index_57962fb157365aa2, []int{2}
}
func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(dst, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteDocumentRequest) GetObjId() string {
	if m != nil {
		return m.ObjId
	}
	return ""
}

func init() {
	proto.RegisterType((*Document)(nil), "index.Document")
	proto.RegisterMapType((map[string]*anypb.Any)(nil), "index.Document.FieldsEntry")
	proto.RegisterType((*FindDocumentRequest)(nil), "index.FindDocumentRequest")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "index.DeleteDocumentRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DocumentServiceClient is the client API for DocumentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DocumentServiceClient interface {
	Create(ctx context.Context, in *Document, opts ...grpc.CallOption) (*Document, error)
	Update(ctx context.Context, in *Document, opts ...grpc.CallOption) (*Document, error)
	Retrieve(ctx context.Context, in *FindDocumentRequest, opts ...grpc.CallOption) (*Document, error)
	Delete(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*Document, error)
}

type documentServiceClient struct {
	cc *grpc.ClientConn
}

func NewDocumentServiceClient(cc *grpc.ClientConn) DocumentServiceClient {
	return &documentServiceClient{cc}
}

func (c *documentServiceClient) Create(ctx context.Context, in *Document, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/index.DocumentService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *documentServiceClient) Update(ctx context.Context, in *Document, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/index.DocumentService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *documentServiceClient) Retrieve(ctx context.Context, in *FindDocumentRequest, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/index.DocumentService/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *documentServiceClient) Delete(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/index.DocumentService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DocumentServiceServer is the server API for DocumentService service.
type DocumentServiceServer interface {
	Create(context.Context, *Document) (*Document, error)
	Update(context.Context, *Document) (*Document, error)
	Retrieve(context.Context, *FindDocumentRequest) (*Document, error)
	Delete(context.Context, *DeleteDocumentRequest) (*Document, error)
}

func RegisterDocumentServiceServer(s *grpc.Server, srv DocumentServiceServer) {
	s.RegisterService(&_DocumentService_serviceDesc, srv)
}

func _DocumentService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Document)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.DocumentService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Create(ctx, req.(*Document))
	}
	return interceptor(ctx, in, info, handler)
}

func _DocumentService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Document)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.DocumentService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Update(ctx, req.(*Document))
	}
	return interceptor(ctx, in, info, handler)
}

func _DocumentService_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.DocumentService/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Retrieve(ctx, req.(*FindDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DocumentService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.DocumentService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Delete(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DocumentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.DocumentService",
	HandlerType: (*DocumentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DocumentService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DocumentService_Update_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _DocumentService_Retrieve_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DocumentService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/index/index.proto",
}

func init() { proto.RegisterFile("proto/index/index.proto", fileDescriptor_index_57962fb157365aa2) }

var fileDescriptor_index_57962fb157365aa2 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xfd, 0x5a, 0x42, 0xc3, 0x37, 0x24, 0x62, 0x56, 0x8c, 0x58, 0x3d, 0x90, 0x9e, 0x88, 0x31,
	0x5b, 0x03, 0x17, 0x95, 0x78, 0x50, 0x91, 0xc4, 0x93, 0x49, 0x8d, 0x17, 0x6f, 0xb4, 0x3b, 0xe0,
	0x62, 0xd9, 0xc5, 0x65, 0x4b, 0xec, 0x1f, 0xf3, 0x0f, 0xf9, 0x47, 0x0c, 0xbb, 0x34, 0x12, 0xd2,
	0x03, 0xf1, 0x32, 0x99, 0x79, 0xf3, 0x5e, 0xdf, 0xbc, 0x66, 0xe1, 0x68, 0xae, 0xa4, 0x96, 0x21,
	0x17, 0x0c, 0x3f, 0x6d, 0xa5, 0x06, 0x21, 0x55, 0x33, 0xf8, 0xc7, 0x13, 0x29, 0x27, 0x29, 0x86,
	0x06, 0x8c, 0xb3, 0x71, 0x38, 0x12, 0xb9, 0x65, 0x04, 0x5f, 0x0e, 0xd4, 0x06, 0x32, 0xc9, 0x66,
	0x28, 0x34, 0xd9, 0x03, 0x97, 0xb3, 0x96, 0xd3, 0x76, 0x3a, 0xff, 0x23, 0x97, 0x33, 0xd2, 0x84,
	0xaa, 0x8c, 0xa7, 0x8f, 0xac, 0xe5, 0x1a, 0xc8, 0x0e, 0xa4, 0x07, 0xde, 0x98, 0x63, 0xca, 0x16,
	0xad, 0x4a, 0xbb, 0xd2, 0xa9, 0x77, 0x4f, 0xa8, 0xb5, 0x2c, 0x3e, 0x43, 0x87, 0x66, 0xfb, 0x20,
	0xb4, 0xca, 0xa3, 0x35, 0xd5, 0x7f, 0x82, 0xfa, 0x06, 0x4c, 0xf6, 0xa1, 0xf2, 0x8e, 0xf9, 0xda,
	0x6a, 0xd5, 0x92, 0x33, 0xa8, 0x2e, 0x47, 0x69, 0x86, 0xc6, 0xab, 0xde, 0x6d, 0x52, 0x7b, 0x33,
	0x2d, 0x6e, 0xa6, 0xb7, 0x22, 0x8f, 0x2c, 0xe5, 0xda, 0xbd, 0x74, 0x82, 0x3e, 0x1c, 0x0c, 0xb9,
	0x60, 0x85, 0x69, 0x84, 0x1f, 0x19, 0x2e, 0x76, 0x8c, 0x10, 0xdc, 0xc0, 0xe1, 0x00, 0x53, 0xd4,
	0xf8, 0x27, 0x79, 0xf7, 0xdb, 0x81, 0x46, 0xa1, 0x7c, 0x46, 0xb5, 0xe4, 0x09, 0x92, 0x73, 0xf0,
	0xee, 0x15, 0x8e, 0x34, 0x92, 0xc6, 0xd6, 0xff, 0xf0, 0xb7, 0x81, 0xe0, 0xdf, 0x8a, 0xfd, 0x32,
	0x67, 0xbb, 0xb2, 0xaf, 0xa0, 0x16, 0xa1, 0x56, 0x1c, 0x97, 0x48, 0xfc, 0xf5, 0xba, 0x24, 0x7c,
	0xb9, 0xd4, 0xb3, 0x49, 0xc9, 0x69, 0xb1, 0x2c, 0x0b, 0x5e, 0x22, 0xbd, 0xbb, 0x78, 0xa5, 0x13,
	0xae, 0xdf, 0xb2, 0x98, 0x26, 0x72, 0x16, 0xca, 0x78, 0x3a, 0x96, 0x2a, 0xc1, 0xdf, 0x66, 0xe3,
	0xd1, 0xf5, 0x4d, 0x8d, 0x3d, 0x03, 0xf5, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x61, 0xac,
	0xc0, 0x90, 0x02, 0x00, 0x00,
}
